{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-09-13T01:54:14.376Z",
    "end": "2021-09-13T01:55:34.073Z",
    "duration": 79697,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c7d6d5bc-d5e3-4402-99bb-f960ba7ded43",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a902984b-8aee-46a1-a6b4-250bdb401d8d",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "cc528313-57ac-40af-bc3e-f831d2e57119",
              "parentUUID": "a902984b-8aee-46a1-a6b4-250bdb401d8d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc528313-57ac-40af-bc3e-f831d2e57119"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 203,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8f71567-f223-48c8-bca8-b81887095ea4",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "223141af-95df-44e1-ba02-560f31ed0037",
              "parentUUID": "e8f71567-f223-48c8-bca8-b81887095ea4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "d8f2a67a-c362-4f2f-a37c-50dd2078b0d9",
              "parentUUID": "e8f71567-f223-48c8-bca8-b81887095ea4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "903a8bb5-db5d-49c1-baac-89475c56fab0",
              "parentUUID": "e8f71567-f223-48c8-bca8-b81887095ea4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "bef490bf-945c-4110-9ae5-2283b0c40236",
              "parentUUID": "e8f71567-f223-48c8-bca8-b81887095ea4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "e7165756-8f33-4281-b838-179532207281",
              "parentUUID": "e8f71567-f223-48c8-bca8-b81887095ea4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "9f88359b-f7df-4250-8f4c-30122fd05319",
              "parentUUID": "e8f71567-f223-48c8-bca8-b81887095ea4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "4579ded1-76a1-4275-9d03-40d48b169014",
              "parentUUID": "e8f71567-f223-48c8-bca8-b81887095ea4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "223141af-95df-44e1-ba02-560f31ed0037",
            "d8f2a67a-c362-4f2f-a37c-50dd2078b0d9",
            "903a8bb5-db5d-49c1-baac-89475c56fab0",
            "bef490bf-945c-4110-9ae5-2283b0c40236",
            "e7165756-8f33-4281-b838-179532207281",
            "9f88359b-f7df-4250-8f4c-30122fd05319",
            "4579ded1-76a1-4275-9d03-40d48b169014"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 993,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2768bfc2-d3ca-429d-94d9-dddfa942409f",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "71343d33-2b18-4fb0-a1ac-b30b5b22e3eb",
              "parentUUID": "2768bfc2-d3ca-429d-94d9-dddfa942409f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 186,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "3650f644-a59c-4c30-a049-34d4d13c191a",
              "parentUUID": "2768bfc2-d3ca-429d-94d9-dddfa942409f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "71343d33-2b18-4fb0-a1ac-b30b5b22e3eb",
            "3650f644-a59c-4c30-a049-34d4d13c191a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 281,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8cb936fb-1bd3-4b66-9f67-aa912d0a4f1c",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "703aab55-e9a6-4abd-958d-009d4e6977e9",
              "parentUUID": "8cb936fb-1bd3-4b66-9f67-aa912d0a4f1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 109,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "97925268-22d9-47a0-852d-fa91b41a8cfd",
              "parentUUID": "8cb936fb-1bd3-4b66-9f67-aa912d0a4f1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "a08bf8e4-a5b1-4a40-8189-985e9451ab26",
              "parentUUID": "8cb936fb-1bd3-4b66-9f67-aa912d0a4f1c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "fb879e1c-ca77-4871-8a4f-fdd3e45816df",
              "parentUUID": "8cb936fb-1bd3-4b66-9f67-aa912d0a4f1c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "703aab55-e9a6-4abd-958d-009d4e6977e9",
            "97925268-22d9-47a0-852d-fa91b41a8cfd",
            "a08bf8e4-a5b1-4a40-8189-985e9451ab26",
            "fb879e1c-ca77-4871-8a4f-fdd3e45816df"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 421,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "87d88e32-e705-46dd-aaf9-c596c30db1da",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "dcfce008-f1d5-4fff-be09-e96cb0aebc8a",
              "parentUUID": "87d88e32-e705-46dd-aaf9-c596c30db1da",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 263,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "8e008768-3878-4251-a78f-45563d70bd18",
              "parentUUID": "87d88e32-e705-46dd-aaf9-c596c30db1da",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcfce008-f1d5-4fff-be09-e96cb0aebc8a",
            "8e008768-3878-4251-a78f-45563d70bd18"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 551,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0569a79d-4d67-4645-9f13-4bec318b7002",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "4eec2452-fec2-4140-94c6-7572721ec1c7",
              "parentUUID": "0569a79d-4d67-4645-9f13-4bec318b7002",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "e691d9da-b6a5-4b64-9cce-a9ac161510e4",
              "parentUUID": "0569a79d-4d67-4645-9f13-4bec318b7002",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4eec2452-fec2-4140-94c6-7572721ec1c7",
            "e691d9da-b6a5-4b64-9cce-a9ac161510e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 188,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5083bf5a-7748-4025-b110-5ada62c23ac9",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "822e9c0b-3bf7-4e44-b88d-e37e65ed4966",
              "parentUUID": "5083bf5a-7748-4025-b110-5ada62c23ac9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8602,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "175b373b-9bf4-44e2-b3a3-364a7d3e42c2",
              "parentUUID": "5083bf5a-7748-4025-b110-5ada62c23ac9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "822e9c0b-3bf7-4e44-b88d-e37e65ed4966",
            "175b373b-9bf4-44e2-b3a3-364a7d3e42c2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 9075,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1a6a70df-cc0d-4b03-b8d0-e55854f7d1b9",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "0ae90ed9-675a-45e3-89cd-84ca1ce4cbe9",
              "parentUUID": "1a6a70df-cc0d-4b03-b8d0-e55854f7d1b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "f09e1228-125b-4cea-83b4-69f6571b73c3",
              "parentUUID": "1a6a70df-cc0d-4b03-b8d0-e55854f7d1b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "3302fd53-21f1-477b-b0ff-52f618d3a8bb",
              "parentUUID": "1a6a70df-cc0d-4b03-b8d0-e55854f7d1b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ae90ed9-675a-45e3-89cd-84ca1ce4cbe9",
            "f09e1228-125b-4cea-83b4-69f6571b73c3",
            "3302fd53-21f1-477b-b0ff-52f618d3a8bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11873,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e6cf9654-abfd-466e-8e37-0c59c427f715",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "a5f00607-cf96-43ac-9b8e-21795b930e40",
              "parentUUID": "e6cf9654-abfd-466e-8e37-0c59c427f715",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "58a94dda-586c-438f-b798-bdd3e4d5ba67",
              "parentUUID": "e6cf9654-abfd-466e-8e37-0c59c427f715",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "49fa9b0d-b306-494b-892b-7eb5815fba14",
              "parentUUID": "e6cf9654-abfd-466e-8e37-0c59c427f715",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "c157da1c-90ab-4cd6-a54b-7dab7f3f9262",
              "parentUUID": "e6cf9654-abfd-466e-8e37-0c59c427f715",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5f00607-cf96-43ac-9b8e-21795b930e40",
            "58a94dda-586c-438f-b798-bdd3e4d5ba67",
            "49fa9b0d-b306-494b-892b-7eb5815fba14",
            "c157da1c-90ab-4cd6-a54b-7dab7f3f9262"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2635,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0d62e868-1fc6-4a8d-80bb-7917eb97cd69",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4352,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3507de8c-91a0-4889-8c8f-2ed501e49e32",
              "parentUUID": "0d62e868-1fc6-4a8d-80bb-7917eb97cd69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4293,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b5314f4b-c473-44a1-b714-10049759cc7a",
              "parentUUID": "0d62e868-1fc6-4a8d-80bb-7917eb97cd69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2896ac02-bbed-4431-8d38-4f902c100644",
              "parentUUID": "0d62e868-1fc6-4a8d-80bb-7917eb97cd69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4278,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "61f0801f-15ed-4b3c-9c8e-2a1f1f0c0670",
              "parentUUID": "0d62e868-1fc6-4a8d-80bb-7917eb97cd69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4329,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "381d5b41-3629-45ea-8787-a99444b56e3e",
              "parentUUID": "0d62e868-1fc6-4a8d-80bb-7917eb97cd69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4321,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "bef38cf7-76ce-4d4e-be27-694b316fc13c",
              "parentUUID": "0d62e868-1fc6-4a8d-80bb-7917eb97cd69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4278,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "3d169751-c0a1-42ce-9860-994e5b99fe71",
              "parentUUID": "0d62e868-1fc6-4a8d-80bb-7917eb97cd69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "ce49fa26-aa94-4851-ba6d-2efc59a2efa0",
              "parentUUID": "0d62e868-1fc6-4a8d-80bb-7917eb97cd69",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4332,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1af2d839-ca1f-44bf-b044-8bd8ef4f20d3",
              "parentUUID": "0d62e868-1fc6-4a8d-80bb-7917eb97cd69",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3507de8c-91a0-4889-8c8f-2ed501e49e32",
            "b5314f4b-c473-44a1-b714-10049759cc7a",
            "2896ac02-bbed-4431-8d38-4f902c100644",
            "61f0801f-15ed-4b3c-9c8e-2a1f1f0c0670",
            "381d5b41-3629-45ea-8787-a99444b56e3e",
            "bef38cf7-76ce-4d4e-be27-694b316fc13c",
            "3d169751-c0a1-42ce-9860-994e5b99fe71",
            "ce49fa26-aa94-4851-ba6d-2efc59a2efa0",
            "1af2d839-ca1f-44bf-b044-8bd8ef4f20d3"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38757,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1f3c920d-7de3-4a46-94df-c3800094c802",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4341,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fee958ef-6db8-4a52-932d-4e771b7fc289",
              "parentUUID": "1f3c920d-7de3-4a46-94df-c3800094c802",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4292,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8918f2ba-0d9b-45a6-ad5b-24cdffb80fd7",
              "parentUUID": "1f3c920d-7de3-4a46-94df-c3800094c802",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4275,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:41315/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:41315/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:41315/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:41315/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:41315/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:41315/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "42e2c1eb-330d-4105-935e-f8dc6f89ed20",
              "parentUUID": "1f3c920d-7de3-4a46-94df-c3800094c802",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "fee958ef-6db8-4a52-932d-4e771b7fc289",
            "8918f2ba-0d9b-45a6-ad5b-24cdffb80fd7",
            "42e2c1eb-330d-4105-935e-f8dc6f89ed20"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12908,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "985ebaa4-bb8a-4c58-8c4b-65f9e8b70c8e",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 405,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41315/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41315/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41315/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41315/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41315/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41315/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41315/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "bb52851d-42e3-4d56-a195-2a3b89c57826",
              "parentUUID": "985ebaa4-bb8a-4c58-8c4b-65f9e8b70c8e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 399,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:41315/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:41315/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:41315/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:41315/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:41315/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:41315/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:41315/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:41315/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:41315/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:41315/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:41315/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:41315/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "20d5e280-f0a1-4dea-8ed8-31803de12f0f",
              "parentUUID": "985ebaa4-bb8a-4c58-8c4b-65f9e8b70c8e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "bb52851d-42e3-4d56-a195-2a3b89c57826",
            "20d5e280-f0a1-4dea-8ed8-31803de12f0f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 804,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}